{"version":3,"sources":["js/modules/GameBoard.js","js/modules/GameManager.js","js/modules/gsapanimation.js","js/main.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["GameBoard","exports","boardElement","gameManager","_classCallCheck","icons","initializeBoard","_createClass","key","value","innerHTML","tiles","createTiles","assignWinningLine","i","tile","document","createElement","className","dataset","index","appendChild","push","_this","winningLineIndex","Math","floor","random","isRow","winningIcon","length","winningLine","icon","forEach","revealTile","classList","add","style","backgroundImage","concat","tileIndex","parseInt","updateGameState","isTileInWinningLine","_this$winningLine","checkForWin","_this$winningLine2","contains","_GameBoard","require","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","t","_toPrimitive","String","r","e","toPrimitive","call","Number","GameManager","gameBoardElement","triesLeftElement","messageElement","gameBoard","triesLeft","tileInWinningLine","textContent","handleWin","handleLose","handleTileClick","remove","resetGame","gsapanimation","gsap","registerPlugin","ScrollTrigger","gameImages","querySelector","from","duration","y","opacity","ease","scrollTrigger","trigger","toggleActions","_GameManager","_gsapanimation","restartButton","addEventListener","event","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","bundle","updateLink","link","newLink","cloneNode","onload","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module"],"mappings":"AIAA,ACAA,IDAI+G,ACAAW,MAAM,GDAG,ACAAzE,GDAG,IAAI,ACAA,CAAC,cAAc,CAAC;ADCpC,ACCA,SDDS+D,ACCAW,UAAUA,CAACC,IAAI,EAAE,CDDCZ,CAAA,EAAG;ADD9B/D,ECEE,ACCA,IDDI,ACCA4E,CDDCd,ADFP,MEGa,GDDG,ACCAa,EDDE,ECCE,CAACE,SAAS,CAAC,CAAC;AFDhC,EEEED,EDDEd,ADDJL,KEES,CAACqB,GDDG,GAAGd,ACCA,AFFhB,GEEmB,AFFnBhE,OAAA,ECC4B,CAAC,CAAC,CCCC;AFD/B,ECCE,ECCE2E,AFFJjB,IEEQ,CAACjB,MAAM,CAAC,CAAC,CFFjB,GAAAzC,OAAA;AAEA,ECCE,ACAA,CAAC,CFDH2C,KCCSmB,SAAS,cDDL,EAAC,CAAC;ACEf,ADAE,AFPF,ACCO,EGMLc,EFAM7C,AFPRhC,KIOS,AHNO4C,CGMNoC,IAAI,AJPd,GIOiBJ,AJPjB3E,GEOwB,CEAH,CAAC+E,AHNOpC,CCMF5E,ADNE,CDD7B,CCC+B,CGML,CAACiH,IFAQ,CEAH,AFAIhC,CEAH,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EFAM,CEAH,AFAI,GEADiC,IAAI,CAACC,GAAG,CAAC,CAAC,AFAI,CAAC;ACEhE,ADDE,AFRyC,EIQzCP,AHLA/B,ECKMZ,EEAF,AHLA,CGKCmD,AHLAtC,EEMEmB,AHTkC/D,QIQ1B,AJR0BC,CIQzBkF,AJRyB,EEQnB,CCCHpB,AFNA,CEMA,AFNClB,CCKK/E,CCCH,MCDM,CAAC6G,AFAI,CAAC5B,GDLD,CAAC,EGKE,EAAE2B,IAAI,CAACU,AFAI,CAAC,UEAM,AJRbpF,CIQc,EFAM,CAAC,GFRrB,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AIS3C,AFAE,AFTyC,EGUzC,EDDM+B,KFTmC9E,SESrB,GAAGY,IFTkBwC,IESV,CAACyC,GFTS,EAAAxC,QESI,CAAC,EFTL,QESe,CAAC,CFThBD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AIW3C,AFDE,AFVyC,EGWzC,AFNF,EGMI6E,AFDI3B,ECCF,GHXqCjD,KIW7B,GAAG,AFDI,GAAG3C,CECH,MJXsB4C,CEUX,CAACqC,IFVU,EAAApC,KAAA,EEUG,CAAC,UFVJ/C,CAAA,IEUmB,CAAC,CFVpBA,CAAA,GAAA+C,KAAA,CAAA/B,MAAA,EAAAhB,CAAA,UAAAgD,UAAA,GAAAD,KAAA,CAAA/C,CAAA,GAAAgD,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAP,MAAA,EAAAQ,cAAA,CAAAN,UAAA,CAAAtD,GAAA,GAAAsD,UAAA;AIY3C,AFAE,AFZyC,ECM3C,EEMI,ADAI3D,EDNF6F,GGMGwC,AJZkCjI,CGYjC,IAAI2G,CDAK,CDNH,EGMEsB,AFAI,CCAH,ACAD,AHNCxH,CEMD,CAAC,ACAE,CFAK+D,AFZiBtB,KCMhB,CAACwC,KDNe,EAAA5B,MCMF,CAAC,GDNC,CEYN,CACjCW,AFbuCV,KCMS,CAAC,KDNV,KEavB,EAChBW,CFduCZ,UAAA,EAAAV,GEcvB,EAChBuB,YFfuC,CAAAzB,CEgBzC,CAAC,SFhBwC,CAAAF,SAAA,EAAAc,UAAA,OAAAC,WAAA,EAAAX,iBAAA,CAAAF,WAAA,EAAAa,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAV,WAAA,iBAAAQ,QAAA,mBAAAR,WAAA;AEkBzCuB,AFlByC,EGazC,ACAA,AHNA,CEMC,CAAC,ECAEuD,AHNAvC,GDPqC5B,EGahC+C,GAAG,EAAE,ACAA,AFKE,ADXF,CCWGN,CELD,AHNA,MDPyBtC,CAAA,QEkBR,AFlBQzD,CEkBP,AFlBO,GAAA0D,IEkBA,EAAE,MFlBF,CAAAD,CAAA,EEkBGuC,KAAK,EAAK,uBFlBb5D,OAAA,CAAApC,CAAA,IAAAA,CAAA,GAAA2D,MAAA,CAAA3D,CAAA;AAAA,EEmBvC,ECLA,ACAA,ALdSd,AEQT6F,ECWIiB,ECLAM,AFNA,CDRmC5C,ACQlC0B,ECWI,CAACtC,CHnBQ,AEQT,CAAC,CEMC,CJdO3D,EIcJ,ADKE,CCLD,ADKEkC,ECLA,CHdsBoC,CDArB,ACAqB,CGcnB4C,AJdFnH,AEQE,CDRmB0E,CAAA,ACQjB,CEMC,CAAC2C,ADKE,CAACtE,ICLE,AJdX,EIcauE,EDKI,CAAC,ECLA,CAAC,GDKK,CAAC,CFnBJpE,CEmBM,MFnBN,CAAAqB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAI,CAAA,GAAAJ,CAAA,CAAAnB,MAAA,CAAAwB,WAAA,EGc6D,CAAC,eHd9DD,CAAA,QAAA7D,CAAA,GAAA6D,CAAA,CAAAE,IAAA,CAAAN,CAAA,EAAAG,CAAA,gCAAAxB,OAAA,CAAApC,CAAA,UAAAA,CAAA,YAAA4C,SAAA,yEAAAgB,CAAA,GAAAD,MAAA,GAAAK,MAAA,EAAAP,CAAA;AAAA,EIezC,ALdE,EIcA,ADKEpE,AFlBO4E,ECOPoB,EEMEiB,GJdJpH,GEQU,CEMC,ADKE,AFlBO,CEkBNyF,ADXF,CEMC,AFNA,CDPOxF,GDDRC,ICCQ,CAAA6E,KEkBS,CAAC+B,CHnBN,EAAE3G,EGmBS,AFlBf,CEkBgByD,MAAM,CAAC,CHnBN,EAAE;EKgBzC2E,AFIE,AFlBF,EDFyCnI,EIerC,AFNAgG,CAAC,EAAE,EDPPrB,CIcU,CDDCwC,ECCEkB,AHPA,IFT4B,IIepB,AHbTzD,CGaUoC,CCCC,CAAC,ALhBiBpH,KIeZ,CAAC,CAAC,CAAC,CAAC,AJfQ,GKgBL,CJdR,EAAEiF,gBAAgB,EAAEC,cAAc,EAAE;AEmBhE,CAAC,CAAC,ECLA,ACCA,ALhBE,ACC4D9E,ECQ5DiG,EGOEqC,ALhBE,CAACxI,IKgBE,AHPA,EAAE,CGOCc,AHPA,GDRkD,EDD3C,GKgBC,ALhBEd,CKgBDyI,CJfyC5D,UDD5B,CCC4B,IIezB,CAAC,wBAAwB,CAAC;AFMjE6B,ECNA,ECCE,ALhBE,ACCF,ECQEN,EFTI,ACCF,CIeC,ALhBEnG,ACCF6E,CCQC,EAAE,CGOClE,AFKE,CELD,AFKE+F,GELC,CAAC,EAAE/F,ALhBE,CKgBD,ELhBIX,AESF,CGOCuI,CJfC,GAAG1D,CIeC,CAAClD,AFKE,CAAC,GHrBG,EKgBA,EAAEhB,AFKE,CELD,CFKG,CELD,EAAE,CJfC,QEoBI;ECJ9C,ADKEX,EHrBE,ACCF,EIeE,AHRmB,EFRf,ACCF,CGeC,AJhBEE,ACCF4E,CIeCyC,EDAE,CDKG,CAAC/B,AHrBA,EKgBA,CAAC4B,ALhBE,CAAC,KGqBK,CAAC,CAAC,AHrBA,ACCF,EIeE,ALhBE,CKgBDmB,AJfAzD,KIeK,CAACnE,ALhBE,CKgBD,CAAC,ALhBE,CKgBDkH,IAAI,CAAC,CLhBG,CCCD,CDDG,EKgBAN,KLhBO,CKgBD,CAACT,ALhBE,OAAO,CAAC,IKgBE,CAAC,CAAC,EAAE;ADCtE,ADKE,CAAC,CAAC,EHrBE,ACCF,ECOEV,EGQEoB,ALhBE,ACCF,CDDGrH,ACCF4E,SIeS,CAACwD,AHRA,EAAE,EDPE,CIeC,ALhBE,CKgBD5H,ALhBE,CKgBD,ALhBE,ACCFoE,CIeC,ALhBE,CKgBD,ALhBE,YCCU;AGiBxC,EJjBI,ECCA,EIeE,EJfE,ACOAsB,CESCe,AHhBApC,MCOM,EAAE,CDPC,CGgBCoC,CAACC,CHhBC,EGgBE,AFTA,EESE,AHhBAxH,oBAAS,CAACgF,gBAAgB,EAAE,IAAI,CAAC;EGiBxD,AJlBGzE,EKiBD,AJfA,IAAI,ACMiB,CEUhB,AHhBA6E,CGgBC,EAAE,EJlBP,CIkBUoC,AJlBVxH,GIkBa,AHhBA,EGgBEyH,CHhBC,EAAE,CDFlB,GIkBsB,CAAC,gFAAgF,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH,ICAIc,ALnBC/H,ACGD,GDHC,CCGG,ACMAiG,CDNC/D,KIgBK,GAAG,IAAI,AHVA,EAAE,CDNC,CAAC,KAAK,CAAC,CAAC,CAAC;AGkBjCzC,ECDE,AJhBA,CIgBC,CLpBEQ,CKoBA,CHVC,CEWC,ACDA,CDCCwG,ACDA,CLpBH,EACD,SIoBgB,AJpBhB3G,GIoBmB0G,aJpBnB,EAAkB,GIoBmB;AACzC/G,ACDA,EJhBA,ECMI,CAAC,CFTC,AESA,CEWC,CAACsH,EJpBE,CAACrH,OIoBO,GAAGqH,EJpBE,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","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["export class GameBoard {\r\n    constructor(boardElement, gameManager) {\r\n      this.boardElement = boardElement;\r\n      this.gameManager = gameManager;\r\n      this.icons = [\"icon1\", \"icon2\", \"icon3\", \"icon4\", \"icon5\"]; \r\n      this.initializeBoard(); //name of the images on game board array\r\n    }\r\n    initializeBoard() {\r\n      this.boardElement.innerHTML = \"\";\r\n      this.tiles = [];\r\n      this.createTiles();\r\n      this.assignWinningLine();\r\n    }\r\n  \r\n    createTiles() {\r\n      for (let i = 0; i < 25; i++) { //loops 25 times to create tiles\r\n        const tile = document.createElement(\"div\");\r\n        tile.className = \"tile\";\r\n        tile.dataset.index = i; \r\n        this.boardElement.appendChild(tile);\r\n        this.tiles.push(tile);\r\n      }\r\n    }\r\n  //for assigning a winning line\r\n  //if the gambox grid is chnaged from 5by5 to any other number make sure to update here as well\r\n    assignWinningLine() {\r\n      const winningLineIndex = Math.floor(Math.random() * 5);\r\n      const isRow = Math.random() < 0.5;\r\n      const winningIcon =\r\n        this.icons[Math.floor(Math.random() * this.icons.length)];\r\n      this.winningLine = { isRow, index: winningLineIndex, icon: winningIcon };\r\n  //this sets random icons for all tiles\r\n      this.tiles.forEach(\r\n        (tile) =>\r\n          (tile.dataset.icon =\r\n            this.icons[Math.floor(Math.random() * this.icons.length)])\r\n      ); //and this sets the wining icon for all the tiles in a same row or coloumn\r\n      for (let i = 0; i < 5; i++) {\r\n        const index = isRow ? winningLineIndex * 5 + i : i * 5 + winningLineIndex;\r\n        this.tiles[index].dataset.icon = winningIcon;\r\n      }\r\n    }\r\n  //this reveales the tile, where the backgroudn image if the tile is based on its icon\r\n    revealTile(tile) {\r\n      tile.classList.add(\"revealed\");\r\n      tile.style.backgroundImage = `url('img/${tile.dataset.icon}.svg')`; // for images with svg extension\r\n     //for ease better use images with similar extension here\r\n      const tileIndex = parseInt(tile.dataset.index);\r\n      this.gameManager.updateGameState(this.isTileInWinningLine(tileIndex));\r\n    }\r\n  \r\n    //took a while to fix: checks if the tile is in the wining line and if the tile index matches the wining line\r\n    isTileInWinningLine(tileIndex) {\r\n      const { isRow, index, icon } = this.winningLine;\r\n    \r\n      return (\r\n        (isRow && Math.floor(tileIndex / 5) === index) ||\r\n        (!isRow && tileIndex % 5 === index)\r\n      );\r\n    }\r\n \r\n\r\n    checkForWin() {\r\n      const { isRow, index, icon } = this.winningLine;\r\n      //  const winningIndices = [];\r\n      for (let i = 0; i < 5; i++) {\r\n        const tileIndex = isRow ? index * 5 + i : index + i * 5;\r\n     // Checks if the tile is revealed and has the winning icon i.e, similar across the row or coloumn\r\n        if (\r\n          !this.tiles[tileIndex].classList.contains(\"revealed\") ||\r\n          this.tiles[tileIndex].dataset.icon !== icon\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n  ","import { GameBoard } from \"./GameBoard.js\";\r\n\r\nexport class GameManager {\r\n  constructor(gameBoardElement, triesLeftElement, messageElement) {\r\n    this.gameBoardElement = gameBoardElement;\r\n    this.triesLeftElement = triesLeftElement;\r\n    this.messageElement = messageElement;\r\n    this.gameBoard = new GameBoard(gameBoardElement, this);\r\n    this.triesLeft = 20;\r\n    this.updateGameState(false); //initial value false meaning no tile in winning row/coloumn\r\n  }\r\n//handles win and loss \r\n  updateGameState(tileInWinningLine) {\r\n    this.triesLeftElement.textContent = `Tries Left: ${this.triesLeft}`;\r\n    if (tileInWinningLine && this.gameBoard.checkForWin()) {\r\n      this.handleWin();\r\n    } else if (this.triesLeft <= 0) {\r\n      this.handleLose();\r\n    }\r\n  }\r\n\r\n  handleTileClick(tile) {\r\n    //DO  NOT TOUCH took a while to fix simple typo error:\r\n    //this checks if the clicked dtile has not been revealed and if at the same time if ther are remainig tries\r\n    //and reveals the cliked tile on board\r\n    if (!tile.classList.contains(\"revealed\") && this.triesLeft > 0) {\r\n      this.gameBoard.revealTile(tile); \r\n      if (!this.gameBoard.isTileInWinningLine(parseInt(tile.dataset.index))) {\r\n        this.triesLeft--;\r\n      }\r\n      this.updateGameState(\r\n        this.gameBoard.isTileInWinningLine(parseInt(tile.dataset.index))\r\n      );\r\n    }\r\n  }\r\n//winners message\r\n  handleWin() {\r\n    this.messageElement.textContent = \"Congratulations, you've won the jackpot ! Restart to play again\";\r\n    this.messageElement.classList.remove(\"hidden\");\r\n    this.messageElement.classList.add(\"win-message\");\r\n  }\r\n//,oosing message\r\n  handleLose() {\r\n    this.messageElement.textContent =\r\n      \"Better luck next time. Please restart the game.\";\r\n    this.messageElement.classList.remove(\"hidden\");\r\n    this.messageElement.classList.add(\"lose-message\");\r\n  }\r\n// to reset the game\r\n  resetGame() {\r\n    this.gameBoard.initializeBoard();\r\n    //reset tge number of tris \r\n    this.triesLeft = 20;\r\n    this.updateGameState(false);\r\n    this.messageElement.textContent = \"\"; // clears message\r\n    this.messageElement.classList.add(\"hidden\"); // message is hidden\r\n  }\r\n}\r\n","\r\nexport function gsapanimation(){\r\n\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n//selcting the game iamge container\r\nconst gameImages = document.querySelector(\".obimage\");\r\n  if (gameImages) {\r\n    gsap.from('.obimage', {\r\n      duration: 1,\r\n      y: '-1vw',\r\n      opacity: 0,\r\n      ease: 'power2.in', //ease\r\n      scrollTrigger: {\r\n        trigger: \".obj\", //triggering element\r\n        toggleActions: \"restart none none none\",\r\n      },\r\n    });\r\n  }\r\n\r\n};","import './../sass/main.scss'\r\n\r\nimport { GameManager } from \"./modules/GameManager.js\";\r\nimport { gsapanimation } from \"./modules/gsapanimation.js\";\r\n\r\ngsapanimation();\r\n\r\n  const gameBoardElement = document.querySelector(\"#game-board\");\r\n  const triesLeftElement = document.querySelector(\"#tries-left\");\r\n  const messageElement = document.querySelector(\"#message\");\r\n  const restartButton = document.querySelector(\"#restart-game\");\r\n\r\n  const gameManager = new GameManager(\r\n    gameBoardElement,\r\n    triesLeftElement,\r\n    messageElement\r\n  );\r\n\r\n  gameBoardElement.addEventListener(\"click\", (event) => {\r\n    if (event.target.classList.contains(\"tile\")) {\r\n      gameManager.handleTileClick(event.target);\r\n    }\r\n  });\r\n\r\n  restartButton.addEventListener(\"click\", () => {\r\n    gameManager.resetGame();\r\n  });\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}